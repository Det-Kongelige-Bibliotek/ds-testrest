/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.1.3-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import dk.kb.picture.model.PictureMetadata;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import javax.validation.constraints.*;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-10-03T13:53:56.637+02:00[Europe/Oslo]")

@Validated
@Api(value = "findPictureMetadata", description = "the findPictureMetadata API")
public interface FindPictureMetadataApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "Find metadata by ID", nickname = "getPictureMetadata", notes = "Returns a single picture metadata", response = PictureMetadata.class, tags={ "picture", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "successful operation", response = PictureMetadata.class),
        @ApiResponse(code = 400, message = "Invalid Picture ID supplied"),
        @ApiResponse(code = 404, message = "Picture not found") })
    @RequestMapping(value = "/findPictureMetadata/{pictureId}",
        produces = { "application/json" },
        method = RequestMethod.GET)
    default ResponseEntity<PictureMetadata> getPictureMetadata(@ApiParam(value = "ID of Picture to return",required=true) @PathVariable("pictureId") Long pictureId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "{  \"id\" : 0,  \"pictureName\" : \"pictureName\"}");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
